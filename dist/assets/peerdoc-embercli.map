{"version":3,"sources":["vendor/ember-cli/app-prefix.js","peerdoc-embercli/adapters/application.js","peerdoc-embercli/app.js","peerdoc-embercli/controllers/docmeta.js","peerdoc-embercli/controllers/pd.js","peerdoc-embercli/controllers/pd/doc.js","peerdoc-embercli/controllers/pd/index.js","peerdoc-embercli/helpers/if-cond.js","peerdoc-embercli/initializers/app-version.js","peerdoc-embercli/initializers/export-application-global.js","peerdoc-embercli/models/doc.js","peerdoc-embercli/models/doccg.js","peerdoc-embercli/models/docdelt.js","peerdoc-embercli/models/docmeta.js","peerdoc-embercli/models/invitation.js","peerdoc-embercli/models/pd.js","peerdoc-embercli/router.js","peerdoc-embercli/routes/pd.js","peerdoc-embercli/routes/pd/doc.js","peerdoc-embercli/serializers/docdelt.js","peerdoc-embercli/templates/application.js","peerdoc-embercli/templates/doc.js","peerdoc-embercli/templates/pd.js","peerdoc-embercli/templates/pd/index.js","peerdoc-embercli/tests/adapters/application.jshint.js","peerdoc-embercli/tests/app.jshint.js","peerdoc-embercli/tests/controllers/docmeta.jshint.js","peerdoc-embercli/tests/controllers/pd.jshint.js","peerdoc-embercli/tests/controllers/pd/doc.jshint.js","peerdoc-embercli/tests/controllers/pd/index.jshint.js","peerdoc-embercli/tests/helpers/if-cond.jshint.js","peerdoc-embercli/tests/helpers/resolver.js","peerdoc-embercli/tests/helpers/resolver.jshint.js","peerdoc-embercli/tests/helpers/start-app.js","peerdoc-embercli/tests/helpers/start-app.jshint.js","peerdoc-embercli/tests/models/doc.jshint.js","peerdoc-embercli/tests/models/doccg.jshint.js","peerdoc-embercli/tests/models/docdelt.jshint.js","peerdoc-embercli/tests/models/docmeta.jshint.js","peerdoc-embercli/tests/models/invitation.jshint.js","peerdoc-embercli/tests/models/pd.jshint.js","peerdoc-embercli/tests/router.jshint.js","peerdoc-embercli/tests/routes/pd.jshint.js","peerdoc-embercli/tests/routes/pd/doc.jshint.js","peerdoc-embercli/tests/serializers/docdelt.jshint.js","peerdoc-embercli/tests/test-helper.js","peerdoc-embercli/tests/test-helper.jshint.js","peerdoc-embercli/tests/unit/adapters/application-test.js","peerdoc-embercli/tests/unit/adapters/application-test.jshint.js","peerdoc-embercli/tests/unit/controllers/docmeta-test.js","peerdoc-embercli/tests/unit/controllers/docmeta-test.jshint.js","peerdoc-embercli/tests/unit/controllers/pd-test.js","peerdoc-embercli/tests/unit/controllers/pd-test.jshint.js","peerdoc-embercli/tests/unit/controllers/pd/doc-test.js","peerdoc-embercli/tests/unit/controllers/pd/doc-test.jshint.js","peerdoc-embercli/tests/unit/helpers/if-cond-test.js","peerdoc-embercli/tests/unit/helpers/if-cond-test.jshint.js","peerdoc-embercli/tests/unit/models/doc-test.js","peerdoc-embercli/tests/unit/models/doc-test.jshint.js","peerdoc-embercli/tests/unit/models/doccg-test.js","peerdoc-embercli/tests/unit/models/doccg-test.jshint.js","peerdoc-embercli/tests/unit/models/docdelt-test.js","peerdoc-embercli/tests/unit/models/docdelt-test.jshint.js","peerdoc-embercli/tests/unit/models/docmeta-test.js","peerdoc-embercli/tests/unit/models/docmeta-test.jshint.js","peerdoc-embercli/tests/unit/models/invitation-test.js","peerdoc-embercli/tests/unit/models/invitation-test.jshint.js","peerdoc-embercli/tests/unit/models/pd-test.js","peerdoc-embercli/tests/unit/models/pd-test.jshint.js","peerdoc-embercli/tests/unit/models/pd/doc-test.js","peerdoc-embercli/tests/unit/models/pd/doc-test.jshint.js","peerdoc-embercli/tests/unit/models/text-test.js","peerdoc-embercli/tests/unit/models/text-test.jshint.js","peerdoc-embercli/tests/unit/routes/pd-test.js","peerdoc-embercli/tests/unit/routes/pd-test.jshint.js","peerdoc-embercli/tests/unit/routes/pd/doc-test.js","peerdoc-embercli/tests/unit/routes/pd/doc-test.jshint.js","peerdoc-embercli/tests/unit/routes/text-test.js","peerdoc-embercli/tests/unit/routes/text-test.jshint.js","peerdoc-embercli/tests/unit/serializers/docdelt-test.js","peerdoc-embercli/tests/unit/serializers/docdelt-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('peerdoc-embercli/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTAdapter.extend({\n    namespace: 'api',\n    host: 'http://localhost:8080' });\n\n});","define('peerdoc-embercli/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'peerdoc-embercli/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('peerdoc-embercli/controllers/docmeta', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n\n    isModified: (function () {\n      var model = this.get('model');\n\n      return model.get('lastmod') == 'true';\n      //return true; \n    }).property('model.lastmod'),\n\n    isPending: (function () {\n      var model = this.get('model');\n\n      return model.get('lastmod') == 'pending';\n      //return true;\n    }).property('model.lastmod') });\n\n});","define('peerdoc-embercli/controllers/pd', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].ArrayController.extend({\n        itemController: 'docmeta',\n        sortProperties: ['id'],\n        sortAscending: false,\n        actions: {\n            createDoc: function createDoc() {\n                // implement your action here\n                var model = this.get('model');\n                var title = this.get('newTitle');\n                if (!title.trim()) {\n                    return;\n                }\n\n                var newdoc = this.store.createRecord('doc', {\n                    title: title,\n                    ctext: 'newdoc',\n                    cursor: 0\n                });\n                var that = this;\n                newdoc.save().then(function (saveddoc) {\n                    model.update().then(function () {\n\n                        that.transitionToRoute('pd.doc', saveddoc);\n                    });\n                } /*that.transitionToRoute('index')*/);\n                $('#new-todo').val('');\n\n                return false;\n                //+newdoc.get(\"id\")\n                //this.transitionToRoute('index');\n            },\n\n            invite: function invite(id, istr) {\n                if (!istr) {\n                    console.log('NOT CORRECT INPUT FORMAT');\n                    return false;\n                }\n                var strs = istr.split('@');\n                if (strs.length != 2) {\n                    console.log('NOT CORRECT INPUT FORMAT');\n                    return false;\n                }\n                var invitation = this.store.createRecord('invitation', {\n                    address: strs[0],\n                    dockey: 'xxxxx',\n                    name: strs[1],\n                    docid: id,\n                    type: 'invite'\n                });\n                //console.log(\"1\");\n                invitation.save();\n                //console.log(\"2\");\n                return false;\n            },\n\n            join: function join(id) {\n\n                var joinvar = this.store.createRecord('invitation', {\n                    dockey: 'xxxxx',\n                    docid: id,\n                    type: 'join'\n                });\n                //console.log(\"1\");\n                joinvar.save();\n                //console.log(\"2\");\n                return false;\n            } }\n    });\n\n});","define('peerdoc-embercli/controllers/pd/doc', ['exports', 'ember'], function (exports, Ember) {\n\n   'use strict';\n\n   exports['default'] = Ember['default'].Controller.extend({\n      needs: \"pd\" });\n\n});","define('peerdoc-embercli/controllers/pd/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('peerdoc-embercli/helpers/if-cond', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.ifCond = ifCond;\n\n  function ifCond(v1, v2, options) {\n\n    if (v1 === v2) {\n      return options.fn(this);\n    }\n    return options.inverse(this);\n  }\n\n  exports['default'] = Ember['default'].HTMLBars.makeBoundHelper(ifCond);\n\n});","define('peerdoc-embercli/initializers/app-version', ['exports', 'peerdoc-embercli/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('peerdoc-embercli/initializers/export-application-global', ['exports', 'ember', 'peerdoc-embercli/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('peerdoc-embercli/models/doc', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    title: DS['default'].attr('string'),\n    ctext: DS['default'].attr('string'),\n    cursor: DS['default'].attr('number')\n  });\n\n});","define('peerdoc-embercli/models/doccg', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        location: DS['default'].attr('number'),\n        mod: DS['default'].attr('string')\n    });\n\n});","define('peerdoc-embercli/models/docdelt', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    docid: DS['default'].attr('number'),\n    cursor: DS['default'].attr('number'),\n    doccgs: DS['default'].hasMany('doccg', { embedded: 'always' }) });\n\n});","define('peerdoc-embercli/models/docmeta', ['exports', 'ember-data'], function (exports, DS) {\n\n   'use strict';\n\n   exports['default'] = DS['default'].Model.extend({\n      title: DS['default'].attr('string'),\n      lastmod: DS['default'].attr('string')\n   });\n\n});","define('peerdoc-embercli/models/invitation', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    docid: DS['default'].attr('number'),\n    address: DS['default'].attr('string'),\n    type: DS['default'].attr('string'),\n    name: DS['default'].attr('string'),\n    dockey: DS['default'].attr('string')\n  });\n\n});","define('peerdoc-embercli/models/pd', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].Model.extend({});\n\n});","define('peerdoc-embercli/router', ['exports', 'ember', 'peerdoc-embercli/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  exports['default'] = Router.map(function () {\n    //this.resource('doc',{path:'docs/:doc_id'});\n\n    this.resource('pd', { path: '/' }, function () {\n      this.route('doc', { path: 'docs/:doc_id' });\n      //this.route('LIST');\n      //this.route('SETTING');\n      //this.route('INVITE');\n    });\n  });\n\n});","define('peerdoc-embercli/routes/pd', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    refresher: null,\n\n    model: function model() {\n      return this.store.find('docmeta');\n    },\n\n    clearAllTimer: function clearAllTimer() {\n      for (var i = 0; i < 5000; i++) {\n        if (this.refresher == null || i != this.refresher) {\n          clearInterval(i);\n        }\n      }\n    },\n\n    registerInvite: function registerInvite() {\n\n      var that = this;\n\n      $.each($('.glyphicon-plus').toArray(), function (i, o) {\n        var ev = $._data(o, 'events');\n        if (ev == null) {\n          $('.glyphicon-plus').eq(i).click(function () {\n\n            $(this).parent().next().slideToggle();\n          });\n\n          $('.glyphicon-plus').eq(i).hover(function () {\n            $(this).removeClass('glyphicon-plus').addClass('glyphicon-remove');\n          }, function () {\n            $(this).removeClass('glyphicon-remove').addClass('glyphicon-plus');\n          });\n\n          $('.glyphicon-plus').eq(i).parent().next().find('.invite-input').focus(function () {\n            that.clearAllTimer();\n          });\n        }\n      });\n    },\n\n    updateMeta: function updateMeta(docmeta) {\n      var that = this;\n      return setInterval(function () {\n        console.log('updatemeta');\n        docmeta.update();\n        that.registerInvite();\n      }, 1000);\n    },\n\n    setupController: function setupController(controller, docmeta) {\n      var that = this;\n      controller.set('model', docmeta);\n\n      controller.set('test', 'test');\n\n      Ember['default'].run.schedule('afterRender', this, function () {\n\n        that.refresher = that.updateMeta(docmeta);\n        controller.set('refresher', that.refresher);\n        console.log('MR :' + that.refresher);\n\n        $('.glyphicon-plus').click(function () {\n\n          $(this).parent().next().slideToggle();\n        });\n\n        $('.glyphicon-plus').hover(function () {\n          $(this).removeClass('glyphicon-plus').addClass('glyphicon-remove');\n        }, function () {\n          $(this).removeClass('glyphicon-remove').addClass('glyphicon-plus');\n        });\n\n        $('#new-todo,.invite-input').focus(function () {\n          that.clearAllTimer();\n        });\n\n        $('#findm').click(function () {\n          $('#findm').hide();\n          $('#nav-icon').show();\n          $('.sidebar').animate({ width: 'toggle' }, 350);\n        });\n\n        $('#nav-icon').click(function () {\n\n          $('.sidebar').animate({ width: 'toggle' }, 350);\n\n          if ($('#nav-icon').attr('class') == 'nav-icon-left') {\n            $('#nav-icon').attr('class', 'nav-icon-right');\n          } else {\n            $('#nav-icon').attr('class', 'nav-icon-left');\n          }\n        });\n      }); //afterRender\n    }, //set up controller\n\n    renderTemplate: function renderTemplate(controller) {\n\n      this.render('pd');\n      //this.render(\"welcome\",{output:\"main\",into:\"pd\"});\n    }\n\n  });\n\n});","define('peerdoc-embercli/routes/pd/doc', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model(params) {\n      return this.store.find('doc', params.doc_id);\n    },\n\n    setupController: function setupController(controller, doc) {\n      controller.set('model', doc);\n      controller.set('title', doc.get('title'));\n      console.log(doc.get('title'));\n      var refresher;\n      console.log('MR :' + controller.get('controllers.pd.refresher'));\n      for (var i = 0; i < 5000; i++) {\n        if (controller.get('controllers.pd.refresher') == null || i != controller.get('controllers.pd.refresher')) {\n          clearInterval(i);\n        }\n      }\n\n      Ember['default'].run.schedule('afterRender', this, function () {\n\n        var editor = new Quill('#editor-container');\n\n        controller.set('refresher', refresher);\n        /*\n        editor.on('selection-change', function(range) {\n          console.log('selection-change', range)\n        });\n        */\n\n        var idInc = Math.floor(Math.random() * 10000 + 1);\n        //,'doccgs':[{'location':33,'mod':'ssss'},{'location':33,'mod':'dddd'}]}\n        var docdelt = this.get('store').createRecord('docdelt', { docid: doc.get('id'), cursor: 0 });\n        console.log(docdelt.serialize());\n        docdelt.save();\n        var freeze = false;\n        var that = this;\n        var cursorpos = 0;\n        editor.on('text-change', function (delta, source) {\n\n          console.log('CHANGE FIRES ' + freeze);\n          var range = editor.getSelection();\n\n          $.each(delta.ops, function (i, el) {\n            console.log(el + ':' + range);\n            if (!freeze && el.insert != null && range != null) {\n              cursorpos = range.start;\n              console.log('insert :' + el.insert + ' @ ' + (range.start - el.insert.length));\n              var cg = that.get('store').createRecord('doccg', { id: idInc, location: range.start - el.insert.length, mod: el.insert });\n              docdelt.get('doccgs').pushObject(cg);\n              idInc++;\n              //docdelt.send('becomeDirty');\n              //console.log(docdelt.serialize());\n            } else if (!freeze && el['delete'] != null && range != null) {\n              console.log('delete: ' + el['delete'] + ' @ ' + (range.start + el['delete']) + ' ** ' + range.start);\n              var deletestr = '';\n              for (var i = el['delete']; i > 0; i--) {\n                deletestr = deletestr + '\\\\b';\n                //console.log(deletestr);\n              }\n\n              var cg2 = that.get('store').createRecord('doccg', { id: idInc, location: range.start + el['delete'], mod: deletestr });\n              console.log(deletestr);\n              deletestr = '';\n              docdelt.get('doccgs').pushObject(cg2);\n              idInc++;\n            } else if (!freeze && el.insert != null) {\n              console.log('insert :' + el.insert + ' @ 0');\n              var cg0 = that.get('store').createRecord('doccg', { id: idInc, location: 0, mod: el.insert });\n              docdelt.get('doccgs').pushObject(cg0);\n              idInc++;\n              //docdelt.send('becomeDirty');\n              //console.log(docdelt.serialize());\n            }\n          });\n        });\n\n        refresher = setInterval(function () {\n\n          var cursorp = 0;\n          if (editor.getSelection() != null) {\n            cursorp = editor.getSelection().start;\n          }\n          docdelt.set('cursor', cursorp);\n\n          docdelt.save().then(function (docdelt) {\n\n            //console.log(docdelt.get(\"doccgs\").size());\n            console.log('PUT :' + docdelt.get('cursor') + ':' + docdelt.get('doccgs').length);\n            if (docdelt.get('doccgs') != null) {\n\n              docdelt.get('doccgs').clear();\n\n              doc.reload().then(function (doc) {\n                //console.log(\"222\");\n                if (doc.get('title') != 'None') {\n                  editor.editor.disable();\n                  freeze = true;\n                  editor.setText(doc.get('ctext'));\n                  if (doc.get('cursor') >= 0) {\n                    editor.setSelection(doc.get('cursor'), doc.get('cursor'));\n                  }\n                  freeze = false;\n                  editor.editor.enable();\n                  //console.log(\"333\");\n\n                  console.log(doc.get('ctext') + '\\n@' + doc.get('cursor'));\n                }\n              });\n            }\n          });\n\n          /*.then(function(docdelt){\n            docdelt.clear();\n            doc.reload();\n          });*/\n        }, 300);\n\n        editor.setText(doc.get('ctext'));\n        editor.setSelection(doc.get('cursor'), doc.get('cursor'));\n        docdelt.get('doccgs').clear();\n        console.log('Timer' + refresher);\n      });\n    },\n    renderTemplate: function renderTemplate(controller) {\n      //this.render(\"doc\");\n      this.render('doc', { outet: 'main', into: 'pd' });\n    },\n\n    deactivate: function deactivate() {\n      clearInterval(refresher);\n    }\n  });\n\n});","define('peerdoc-embercli/serializers/docdelt', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTSerializer.extend(DS['default'].EmbeddedRecordsMixin, {\n    attrs: {\n      doccgs: { embedded: 'always' }\n    }\n  });\n\n});","define('peerdoc-embercli/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.3\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"site-wrapper\");\n        var el2 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('peerdoc-embercli/templates/doc', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.3\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"id\",\"sticker\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"editor-wrapper\");\n        var el2 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"editor-container\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n      \\n  \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,4,4,contextualElement);\n        content(env, morph0, context, \"title\");\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('peerdoc-embercli/templates/pd', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.3\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"doc-state banner_m\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.3\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"     \\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.3\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"   \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"doc-state banner_s\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"href\",\"#\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"glyphicon white glyphicon-user right\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element3 = dom.childAt(fragment, [5]);\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n            content(env, morph0, context, \"docmeta.title\");\n            element(env, element3, context, \"action\", [\"join\", get(env, context, \"docmeta.id\")], {});\n            return fragment;\n          }\n        };\n      }());\n      var child3 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.3\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              content(env, morph0, context, \"docmeta.title\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.3\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"doc-state hidden\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"glyphicon white glyphicon-plus right\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"pd.doc\", get(env, context, \"docmeta.id\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child4 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.3\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\" \\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child5 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.3\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"invite\");\n            var el2 = dom.createTextNode(\"\\n \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"input-group\");\n            var el3 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createElement(\"span\");\n            dom.setAttribute(el3,\"class\",\"input-group-btn\");\n            var el4 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el3, el4);\n            var el4 = dom.createElement(\"button\");\n            dom.setAttribute(el4,\"class\",\"btn btn-default\");\n            dom.setAttribute(el4,\"type\",\"button\");\n            var el5 = dom.createTextNode(\"Go!\");\n            dom.appendChild(el4, el5);\n            dom.appendChild(el3, el4);\n            var el4 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el3, el4);\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\" /input-group \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"span\");\n            dom.setAttribute(el2,\"style\",\"display:none\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"invite\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var element1 = dom.childAt(element0, [1]);\n            var element2 = dom.childAt(element1, [3, 1]);\n            var morph0 = dom.createMorphAt(element1,1,1);\n            var morph1 = dom.createMorphAt(dom.childAt(element0, [4]),0,0);\n            inline(env, morph0, context, \"input\", [], {\"type\": \"text\", \"class\": \"form-control invite-input\", \"placeholder\": \"name@ip_addr\", \"value\": get(env, context, \"istr\")});\n            element(env, element2, context, \"action\", [\"invite\", get(env, context, \"docmeta.id\"), get(env, context, \"istr\")], {});\n            content(env, morph1, context, \"this.id\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.3\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\" \\n          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\t\t    \\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element4 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element4,1,1);\n          var morph1 = dom.createMorphAt(element4,3,3);\n          var morph2 = dom.createMorphAt(fragment,3,3,contextualElement);\n          block(env, morph0, context, \"if\", [get(env, context, \"docmeta.isModified\")], {}, child0, child1);\n          block(env, morph1, context, \"if\", [get(env, context, \"docmeta.isPending\")], {}, child2, child3);\n          block(env, morph2, context, \"if\", [get(env, context, \"docmeta.isPending\")], {}, child4, child5);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.3\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"        \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-md-3 col-md-offset-9 sidebar\");\n        var el2 = dom.createTextNode(\"\\n\\n            \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"sline\");\n        var el3 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"icon-createtask\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" \\n            \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"list-wrapper\");\n        var el3 = dom.createTextNode(\"\\n             \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n             \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n             \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"site-wrapper\");\n        dom.setAttribute(el1,\"id\",\"main\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"id\",\"nav-icon\");\n        dom.setAttribute(el1,\"class\",\"nav-icon-left\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element5 = dom.childAt(fragment, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element5, [1]),3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(element5, [3, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n        inline(env, morph0, context, \"input\", [], {\"type\": \"text\", \"id\": \"new-todo\", \"class\": \"form-control\", \"placeholder\": \"Enter your title here\", \"value\": get(env, context, \"newTitle\"), \"action\": \"createDoc\"});\n        block(env, morph1, context, \"each\", [get(env, context, \"controller\")], {\"keyword\": \"docmeta\"}, child0, null);\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('peerdoc-embercli/templates/pd/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.3\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"welcome\");\n        var el2 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"text-vertical-center\");\n        var el3 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"Start PeerDoc\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h3\");\n        var el4 = dom.createTextNode(\"Team20\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"id\",\"findm\");\n        dom.setAttribute(el3,\"href\",\"#about\");\n        dom.setAttribute(el3,\"class\",\"btn btn-dark btn-lg\");\n        var el4 = dom.createTextNode(\"Find Out More\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('peerdoc-embercli/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/controllers/docmeta.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/docmeta.js should pass jshint', function() { \n    ok(false, 'controllers/docmeta.js should pass jshint.\\ncontrollers/docmeta.js: line 9, col 34, Expected \\'===\\' and instead saw \\'==\\'.\\ncontrollers/docmeta.js: line 16, col 34, Expected \\'===\\' and instead saw \\'==\\'.\\n\\n2 errors'); \n  });\n\n});","define('peerdoc-embercli/tests/controllers/pd.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/pd.js should pass jshint', function() { \n    ok(false, 'controllers/pd.js should pass jshint.\\ncontrollers/pd.js: line 39, col 25, Expected \\'!==\\' and instead saw \\'!=\\'.\\ncontrollers/pd.js: line 26, col 7, \\'$\\' is not defined.\\n\\n2 errors'); \n  });\n\n});","define('peerdoc-embercli/tests/controllers/pd/doc.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/pd');\n  test('controllers/pd/doc.js should pass jshint', function() { \n    ok(true, 'controllers/pd/doc.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/controllers/pd/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/pd');\n  test('controllers/pd/index.js should pass jshint', function() { \n    ok(true, 'controllers/pd/index.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/helpers/if-cond.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/if-cond.js should pass jshint', function() { \n    ok(true, 'helpers/if-cond.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/helpers/resolver', ['exports', 'ember/resolver', 'peerdoc-embercli/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('peerdoc-embercli/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/helpers/start-app', ['exports', 'ember', 'peerdoc-embercli/app', 'peerdoc-embercli/router', 'peerdoc-embercli/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('peerdoc-embercli/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/models/doc.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/doc.js should pass jshint', function() { \n    ok(true, 'models/doc.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/models/doccg.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/doccg.js should pass jshint', function() { \n    ok(true, 'models/doccg.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/models/docdelt.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/docdelt.js should pass jshint', function() { \n    ok(true, 'models/docdelt.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/models/docmeta.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/docmeta.js should pass jshint', function() { \n    ok(true, 'models/docmeta.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/models/invitation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/invitation.js should pass jshint', function() { \n    ok(true, 'models/invitation.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/models/pd.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/pd.js should pass jshint', function() { \n    ok(true, 'models/pd.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/routes/pd.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/pd.js should pass jshint', function() { \n    ok(false, 'routes/pd.js should pass jshint.\\nroutes/pd.js: line 13, col 43, Expected \\'!==\\' and instead saw \\'!=\\'.\\nroutes/pd.js: line 102, col 51, Expected \\'===\\' and instead saw \\'==\\'.\\nroutes/pd.js: line 107, col 71, Missing semicolon.\\nroutes/pd.js: line 23, col 9, \\'$\\' is not defined.\\nroutes/pd.js: line 23, col 16, \\'$\\' is not defined.\\nroutes/pd.js: line 24, col 22, \\'$\\' is not defined.\\nroutes/pd.js: line 26, col 17, \\'$\\' is not defined.\\nroutes/pd.js: line 28, col 23, \\'$\\' is not defined.\\nroutes/pd.js: line 32, col 17, \\'$\\' is not defined.\\nroutes/pd.js: line 33, col 23, \\'$\\' is not defined.\\nroutes/pd.js: line 36, col 23, \\'$\\' is not defined.\\nroutes/pd.js: line 39, col 17, \\'$\\' is not defined.\\nroutes/pd.js: line 73, col 12, \\'$\\' is not defined.\\nroutes/pd.js: line 75, col 17, \\'$\\' is not defined.\\nroutes/pd.js: line 80, col 13, \\'$\\' is not defined.\\nroutes/pd.js: line 81, col 17, \\'$\\' is not defined.\\nroutes/pd.js: line 84, col 18, \\'$\\' is not defined.\\nroutes/pd.js: line 88, col 17, \\'$\\' is not defined.\\nroutes/pd.js: line 92, col 14, \\'$\\' is not defined.\\nroutes/pd.js: line 93, col 18, \\'$\\' is not defined.\\nroutes/pd.js: line 94, col 18, \\'$\\' is not defined.\\nroutes/pd.js: line 95, col 18, \\'$\\' is not defined.\\nroutes/pd.js: line 98, col 14, \\'$\\' is not defined.\\nroutes/pd.js: line 100, col 18, \\'$\\' is not defined.\\nroutes/pd.js: line 102, col 21, \\'$\\' is not defined.\\nroutes/pd.js: line 103, col 27, \\'$\\' is not defined.\\nroutes/pd.js: line 107, col 27, \\'$\\' is not defined.\\nroutes/pd.js: line 119, col 30, \\'controller\\' is defined but never used.\\n\\n28 errors'); \n  });\n\n});","define('peerdoc-embercli/tests/routes/pd/doc.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/pd');\n  test('routes/pd/doc.js should pass jshint', function() { \n    ok(false, 'routes/pd/doc.js should pass jshint.\\nroutes/pd/doc.js: line 19, col 65, Expected \\'!==\\' and instead saw \\'!=\\'.\\nroutes/pd/doc.js: line 64, col 21, \\'i\\' is already defined.\\nroutes/pd/doc.js: line 108, col 34, Expected \\'!==\\' and instead saw \\'!=\\'.\\nroutes/pd/doc.js: line 27, col 24, \\'Quill\\' is not defined.\\nroutes/pd/doc.js: line 50, col 11, \\'$\\' is not defined.\\nroutes/pd/doc.js: line 149, col 19, \\'refresher\\' is not defined.\\nroutes/pd/doc.js: line 45, col 48, \\'source\\' is defined but never used.\\nroutes/pd/doc.js: line 143, col 28, \\'controller\\' is defined but never used.\\n\\n8 errors'); \n  });\n\n});","define('peerdoc-embercli/tests/serializers/docdelt.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/docdelt.js should pass jshint', function() { \n    ok(true, 'serializers/docdelt.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/test-helper', ['peerdoc-embercli/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('peerdoc-embercli/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'ApplicationAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('peerdoc-embercli/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/controllers/docmeta-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:docmeta', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('peerdoc-embercli/tests/unit/controllers/docmeta-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/docmeta-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/docmeta-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/controllers/pd-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:pd', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('peerdoc-embercli/tests/unit/controllers/pd-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/pd-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/pd-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/controllers/pd/doc-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:pd/doc', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('peerdoc-embercli/tests/unit/controllers/pd/doc-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/pd');\n  test('unit/controllers/pd/doc-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/pd/doc-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/helpers/if-cond-test', ['peerdoc-embercli/helpers/if-cond', 'qunit'], function (if_cond, qunit) {\n\n  'use strict';\n\n  qunit.module('IfCondHelper');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function (assert) {\n    var result = if_cond.ifCond(42);\n    assert.ok(result);\n  });\n\n});","define('peerdoc-embercli/tests/unit/helpers/if-cond-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/if-cond-test.js should pass jshint', function() { \n    ok(true, 'unit/helpers/if-cond-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/doc-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('doc', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/doc-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/doc-test.js should pass jshint', function() { \n    ok(true, 'unit/models/doc-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/doccg-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('doccg', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/doccg-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/doccg-test.js should pass jshint', function() { \n    ok(true, 'unit/models/doccg-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/docdelt-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('docdelt', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/docdelt-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/docdelt-test.js should pass jshint', function() { \n    ok(true, 'unit/models/docdelt-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/docmeta-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('docmeta', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/docmeta-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/docmeta-test.js should pass jshint', function() { \n    ok(true, 'unit/models/docmeta-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/invitation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('invitation', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/invitation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/invitation-test.js should pass jshint', function() { \n    ok(true, 'unit/models/invitation-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/pd-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('pd', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/pd-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/pd-test.js should pass jshint', function() { \n    ok(true, 'unit/models/pd-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/pd/doc-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('pd/doc', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/pd/doc-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models/pd');\n  test('unit/models/pd/doc-test.js should pass jshint', function() { \n    ok(true, 'unit/models/pd/doc-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/models/text-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('text', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('peerdoc-embercli/tests/unit/models/text-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/text-test.js should pass jshint', function() { \n    ok(true, 'unit/models/text-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/routes/pd-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:pd', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('peerdoc-embercli/tests/unit/routes/pd-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/pd-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/pd-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/routes/pd/doc-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:pd/doc', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('peerdoc-embercli/tests/unit/routes/pd/doc-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/pd');\n  test('unit/routes/pd/doc-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/pd/doc-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/routes/text-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:text', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('peerdoc-embercli/tests/unit/routes/text-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/text-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/text-test.js should pass jshint.'); \n  });\n\n});","define('peerdoc-embercli/tests/unit/serializers/docdelt-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('docdelt', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:docdelt']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n\n});","define('peerdoc-embercli/tests/unit/serializers/docdelt-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/docdelt-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/docdelt-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('peerdoc-embercli/config/environment', ['ember'], function(Ember) {\n  var prefix = 'peerdoc-embercli';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"peerdoc-embercli/tests/test-helper\");\n} else {\n  require(\"peerdoc-embercli/app\")[\"default\"].create({\"name\":\"peerdoc-embercli\",\"version\":\"0.0.0.9fcf570f\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"peerdoc-embercli.js"}